version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: todo-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: todoapi
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - todo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d todoapi"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Todo API Backend
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: todo-api
    restart: unless-stopped
    environment:
      PORT: 8080
      ENVIRONMENT: production
      LOG_LEVEL: info
      DATABASE_URL: postgres://user:password@postgres:5432/todoapi?sslmode=disable
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-that-is-at-least-32-characters-long}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-24}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-*}
    ports:
      - "8080:8080"
    networks:
      - todo-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  todo-network:
    driver: bridge